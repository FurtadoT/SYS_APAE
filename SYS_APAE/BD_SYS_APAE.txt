create database SYS_APAE;

use SYS_APAE;


CREATE TABLE admin_sys (
id INT AUTO_INCREMENT,
 name VARCHAR (70),
 login VARCHAR (70) NOT NULL,
 password VARCHAR (70) NOT NULL, dt_created DATE NOT NULL,

 PRIMARY KEY CLUSTERED (id ASC)
);

CREATE TABLE students (id INT AUTO_INCREMENT,
 name VARCHAR (70),
 cpf VARCHAR (20) NOT NULL,
 rg VARCHAR (20),
 org_exp VARCHAR (5) ,
 dt_exp DATE,
 dt_nasc DATE,
 nationality VARCHAR (30),
 father_name VARCHAR (70),
 mother_name VARCHAR (70),
 address VARCHAR (50),
 city VARCHAR (50),
 state VARCHAR (30),
 district VARCHAR (50),
 cep VARCHAR (20),
 phone VARCHAR (20),
 celphone VARCHAR (20),
 email VARCHAR (50), dt_created DATE NOT NULL,

 PRIMARY KEY CLUSTERED (id ASC)
);

CREATE TABLE instructors (
id INT AUTO_INCREMENT,
 name VARCHAR (70) NULL,
 password VARCHAR (15) NOT NULL,
 cpf VARCHAR (20) NULL,
 email VARCHAR (50) NULL,
 prontuario VARCHAR (25) NULL,
 tipo_monitor VARCHAR (30) NULL,
 carga_horaria INT NULL, dt_created DATE NOT NULL,

 PRIMARY KEY CLUSTERED (id ASC)
);

CREATE TABLE activities ( id INT AUTO_INCREMENT, title VARCHAR (70) NOT NULL, description TEXT NULL, dt_created DATE NOT NULL, PRIMARY KEY CLUSTERED (id ASC)
);

CREATE TABLE classes (
 id INT AUTO_INCREMENT,
 id_student INT NOT NULL,
 id_instructor INT NOT NULL,
 id_activity INT NOT NULL, dt_created DATE NOT NULL,
 dif_dig INT NOT NULL,
 dif_lei INT NOT NULL,
 dif_rec INT NOT NULL,
 dif_atv INT NOT NULL,
 obs_atv VARCHAR (70) NULL,
 dif_int INT NOT NULL,
 obs_int VARCHAR (70) NULL,

 PRIMARY KEY CLUSTERED (id ASC),
 FOREIGN KEY (id_student) REFERENCES students(id),
 FOREIGN KEY (id_instructor) REFERENCES instructors(id), FOREIGN KEY (id_activity) REFERENCES activities(id)
);

INSERT INTO admin_sys (id, name, login, password, dt_created) values(0, 'Tobias', 'admin', 'admin', '2018-06-24');



DELIMITER $$


CREATE PROCEDURE search_classes(IN search VARCHAR(255))
BEGIN
	SELECT c.* FROM classes c inner join instructors i on c.id_instructor = i.id inner join students s on c.id_student = s.id inner join activities a on c.id_activity = a.id WHERE (a.title like CONCAT("%", search ,"%") or s.name like CONCAT("%", search ,"%") or i.name like CONCAT("%", search ,"%"));
END $$


CREATE PROCEDURE search_students(IN search VARCHAR(255))
BEGIN
	SELECT * from students WHERE name like CONCAT("%", search, "%") or cpf like CONCAT("%", search, "%") or email like CONCAT("%", search, "%");
END $$


CREATE PROCEDURE search_instructors(IN search VARCHAR(255))
BEGIN
	SELECT * from instructors WHERE name like CONCAT("%", search, "%") or cpf like CONCAT("%", search, "%") or email like CONCAT("%", search, "%");
END $$


CREATE PROCEDURE search_activities(IN search VARCHAR(255))
BEGIN
	SELECT * from activities WHERE title like CONCAT("%", search, "%");
END $$


DELIMITER ;